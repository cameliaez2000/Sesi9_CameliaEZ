{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-21T06:40:45.843Z",
    "end": "2025-08-21T06:41:07.023Z",
    "duration": 21180,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "426614b4-3c20-460f-a1cd-169b4cbae9b2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "abe03952-ad8e-4c75-bc71-f5fe17db5783",
          "title": "Google Search Test",
          "fullFile": "C:\\Users\\Cevio\\Downloads\\SESI_9_CAMELIA\\tests\\sesi-9\\test_sesi9.js",
          "file": "\\tests\\sesi-9\\test_sesi9.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Berhasil login SauceDemo dan cek page title",
              "fullTitle": "Google Search Test Berhasil login SauceDemo dan cek page title",
              "timedOut": false,
              "duration": 8874,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let options = new chrome.Options();\noptions.addArguments('--incognito'); // option ke chrome supaya tidak ada pop up passwordnya\ndriver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://www.saucedemo.com');\n// locator\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\n\n//action\nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\n// tunggu element tampil\nlet buttonCart = await driver.wait(\n    until.elementLocated(By.xpath('//*[@data-test=\"shopping-cart-link\"]')), \n    10000\n);\nawait driver.wait(until.elementIsVisible(buttonCart), 5000, 'Shopping cart harus tampil');\n\n// assert: element ada\nawait buttonCart.isDisplayed()\n// assert: text dalam element benar\nlet textAppLogo = await driver.findElement(By.className('app_logo')) //locator\nlet logotext = await textAppLogo.getText() //action\n// assert.strictEqual(logotext, 'Swag Labs') //assertion\nassert.equal(logotext, 'Swag Labs') //assertion\n\nawait driver.sleep(5000); //supaya web tidak langsung close\nawait driver.quit(); //supaya selesai",
              "err": {},
              "uuid": "dcdeff10-d0aa-46f2-ae2c-6ef201f88077",
              "parentUUID": "abe03952-ad8e-4c75-bc71-f5fe17db5783",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcdeff10-d0aa-46f2-ae2c-6ef201f88077"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "f7ccaba3-67c1-4d1b-9c0f-0342e497dad8",
          "title": "SauceDemo Test Suite",
          "fullFile": "C:\\Users\\Cevio\\Downloads\\SESI_9_CAMELIA\\tests\\sesi-9\\test_sesi9_2.js",
          "file": "\\tests\\sesi-9\\test_sesi9_2.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SauceDemo Test Suite\"",
              "fullTitle": "SauceDemo Test Suite \"before each\" hook in \"SauceDemo Test Suite\"",
              "timedOut": false,
              "duration": 2889,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Konfigurasi opsi Chrome, seperti mode incognito\nlet options = new chrome.Options();\noptions.addArguments('--incognito'); // Opsi untuk menjalankan Chrome dalam mode incognito\n// Membangun instance driver\ndriver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();\n// Navigasi ke URL dan lakukan proses login\nawait driver.get('https://www.saucedemo.com');\nawait driver.findElement(By.css('[data-test=\"username\"]')).sendKeys('standard_user');\nawait driver.findElement(By.xpath('//*[@data-test=\"password\"]')).sendKeys('secret_sauce');\nawait driver.findElement(By.className('submit-button btn_action')).click();",
              "err": {},
              "uuid": "dd2f8a1a-2265-4b27-ae42-253c43890b56",
              "parentUUID": "f7ccaba3-67c1-4d1b-9c0f-0342e497dad8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SauceDemo Test Suite\"",
              "fullTitle": "SauceDemo Test Suite \"after each\" hook in \"SauceDemo Test Suite\"",
              "timedOut": false,
              "duration": 366,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Memastikan driver ditutup setelah setiap tes untuk membersihkan sesi\nif (driver) {\n    await driver.quit();\n}",
              "err": {},
              "uuid": "70367205-4b47-4c72-bd37-fff9aa090e9c",
              "parentUUID": "f7ccaba3-67c1-4d1b-9c0f-0342e497dad8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Harus berhasil login dan memvalidasi elemen keranjang belanja dan judul halaman",
              "fullTitle": "SauceDemo Test Suite Harus berhasil login dan memvalidasi elemen keranjang belanja dan judul halaman",
              "timedOut": false,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Menunggu elemen 'shopping-cart-link' muncul dan terlihat\nlet buttonCart = await driver.wait(\n    until.elementLocated(By.xpath('//*[@data-test=\"shopping-cart-link\"]')),\n    10000 // Timeout 10 detik\n);\nawait driver.wait(until.elementIsVisible(buttonCart), 5000, 'Shopping cart harus tampil');\n// Assertion: Memastikan elemen keranjang belanja tampil\nawait buttonCart.isDisplayed();\n// Mencari elemen logo aplikasi dan memvalidasi teksnya\nlet textAppLogo = await driver.findElement(By.className('app_logo'));\nlet logotext = await textAppLogo.getText();\nassert.strictEqual(logotext, 'Swag Labs');",
              "err": {},
              "uuid": "21138d48-0776-43ab-b0a2-7abba6db144e",
              "parentUUID": "f7ccaba3-67c1-4d1b-9c0f-0342e497dad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Harus mengurutkan produk dari A-Z dan memvalidasi urutannya",
              "fullTitle": "SauceDemo Test Suite Harus mengurutkan produk dari A-Z dan memvalidasi urutannya",
              "timedOut": false,
              "duration": 5423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Ambil daftar nama produk sebelum diurutkan\nlet productNamesBeforeSort = await driver.findElements(By.className('inventory_item_name'));\nlet namesBefore = await Promise.all(productNamesBeforeSort.map(async (element) => {\n    return await element.getText();\n}));\n// Lakukan aksi untuk memilih opsi 'Name (A to Z)' dari dropdown\nlet dropdown = await driver.findElement(By.className('product_sort_container'));\nawait dropdown.findElement(By.xpath('//option[@value=\"az\"]')).click();\n// Tunggu hingga halaman diperbarui\nawait driver.sleep(5000); \n// Ambil daftar nama produk setelah diurutkan\nlet productNamesAfterSort = await driver.findElements(By.className('inventory_item_name'));\nlet namesAfter = await Promise.all(productNamesAfterSort.map(async (element) => {\n    return await element.getText();\n}));\n// Buat salinan dari daftar nama produk yang belum diurutkan dan urutkan secara manual untuk perbandingan\nlet expectedSortedNames = [...namesBefore].sort();\n// Lakukan assertion untuk membandingkan daftar nama produk yang sebenarnya dengan yang diharapkan\nassert.deepStrictEqual(namesAfter, expectedSortedNames);\nconsole.log(\"Pengurutan produk berhasil!\");",
              "err": {},
              "uuid": "d954478a-c764-4bd2-a6d9-2dc340abf6f7",
              "parentUUID": "f7ccaba3-67c1-4d1b-9c0f-0342e497dad8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21138d48-0776-43ab-b0a2-7abba6db144e",
            "d954478a-c764-4bd2-a6d9-2dc340abf6f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5527,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}